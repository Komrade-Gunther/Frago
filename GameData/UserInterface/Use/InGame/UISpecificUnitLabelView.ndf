
// Icône d'évacuation
UnitLabelUnitEvacIconBUCKComponent is BUCKTextureDescriptor
(
    ElementName = "EvacuationIcon"
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [23.0, 23.0]
        AlignementToFather = [0.5, 0.0]
        AlignementToAnchor = [0.5, 0.0]
    )

    TextureFrame = TUIFramePropertyRTTI(RelativeWidthHeight = [1.0, 1.0])
    TextureToken = "icone_evacuation"
    LocalRenderLayer = 1
)

//----------------------------------------------------------------------
// Nom du joueur
UnitLabelUnitPlayerNameBUCKComponent is BUCKTextDescriptor
(
    ElementName = "PlayerName"
    ComponentFrame = TUIFramePropertyRTTI
    (
        AlignementToFather = [0.5, 0.0]
        AlignementToAnchor = [0.5, 0.0]
    )

    ParagraphStyle = TParagraphStyleRTTI
    (
        Alignment = UIText_Center
        VerticalAlignment = UIText_VerticalCenter
        InterLine = 0
    )

    TextStyle = "PlayerName"
    HasBackground = false
    TextPadding = TRTTILength4(Magnifiable = [1.0, 1.0, 1.0, 1.0])
    HorizontalFitStyle = ~/FitStyle/FitToContent
    VerticalFitStyle = ~/FitStyle/FitToContent

    TypefaceToken = "UIMainFont"
    BigLineAction = ~/BigLineAction/CutByDots

    TextDico = ~/LocalisationConstantes/dico_interface_ingame

    TextColor = "Fulda_Turquoise"
    TextSize = "20"
    LocalRenderLayer = 1
)
//----------------------------------------------------------------------
// Nom de l'unité
private template CarriedUnitLabelUnitNameBUCKComponent
[
    LocalRenderLayer : int,
]
is BUCKTextDescriptor
(
    ElementName = 'CarriedUnitName'

    ParagraphStyle = TParagraphStyleRTTI
    (
        Alignment = UIText_Left
        VerticalAlignment = UIText_VerticalCenter
        InterLine = 0
    )

    HasBackground = true
    BackgroundLocalRenderLayer = <LocalRenderLayer>
    LocalRenderLayer = <LocalRenderLayer> + 1
    TextPadding = TRTTILength4(Magnifiable = [3.0, 1.0, 3.0, 1.0])

    HorizontalFitStyle = ~/FitStyle/FitToContent
    VerticalFitStyle = ~/FitStyle/FitToContent

    BigLineAction = ~/BigLineAction/CutByDots

    TextDico = ~/LocalisationConstantes/dico_interface_ingame
    TextStyle = "Default"
    TypefaceToken = "UISecondFont"
    TextColor = "Blanc"
    TextSize = "10"
)
//----------------------------------------------------------------------
// Nom de l'unité
private template SoloUnitLabelUnitNameBUCKComponent
[
    LocalRenderLayer : int,
]
is BUCKTextDescriptor
(
    ElementName = 'UnitName'

    ParagraphStyle = TParagraphStyleRTTI
    (
        Alignment = UIText_Left
        VerticalAlignment = UIText_VerticalCenter
        InterLine = 0
    )

    HasBackground = true
    BackgroundLocalRenderLayer = <LocalRenderLayer>
    LocalRenderLayer = <LocalRenderLayer> + 1
    TextPadding = TRTTILength4(Magnifiable = [3.0, 1.0, 3.0, 1.0])

    HorizontalFitStyle = ~/FitStyle/FitToContent
    VerticalFitStyle = ~/FitStyle/FitToContent

    BigLineAction = ~/BigLineAction/CutByDots

    TextDico = ~/LocalisationConstantes/dico_interface_ingame
    TextStyle = "Default"
    TypefaceToken = "UISecondFont"
    TextColor = "Blanc"
    TextSize = "14"
)
//----------------------------------------------------------------------
// Nom de l'unité
private template MultiSelectionCarriedUnitLabelUnitNameBUCKComponent
[
    LocalRenderLayer : int,
]
is BUCKTextDescriptor
(
    ElementName = 'CarriedUnitName'

    ParagraphStyle = TParagraphStyleRTTI
    (
        Alignment = UIText_Left
        VerticalAlignment = UIText_VerticalCenter
        InterLine = 0
        OpticalAlignment = true
    )

    HasBackground = true
    BackgroundLocalRenderLayer = <LocalRenderLayer>
    LocalRenderLayer = <LocalRenderLayer> + 1
    TextPadding = TRTTILength4(Magnifiable = [3.0, 1.0, 3.0, 1.0])

    HorizontalFitStyle = ~/FitStyle/FitToContent
    VerticalFitStyle = ~/FitStyle/FitToContent

    BigLineAction = ~/BigLineAction/CutByDots

    TextDico = ~/LocalisationConstantes/dico_interface_ingame
    TextStyle = "Default"
    TypefaceToken = "UISecondFont"
    TextColor = "Blanc"
    TextSize = "10"
)
//----------------------------------------------------------------------
// Icône d'unité

private LabelUnitIconWidthHeight is [36.0, 36.0]

private UnitLabelUnitIcon is TBUCKSpecificLabelUnitIconDescriptor
(
    ElementName = "UnitIcon"

    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = ~/LabelUnitIconWidthHeight
        AlignementToFather = [0.0, 0.5]
        AlignementToAnchor = [0.0, 0.5]
    )

    RadarIconTextureName = "icone_PourPanelSelectionRdr"
    RadarIconColorName = "Blanc220"

    ChildFitToContent = true
    LocalRenderLayer = 2

    TextureDrawer = "ColorMultiply"
    UniformDrawer = $/UserInterface/UIUniformDrawer

    HasBorder = false
    BorderThicknessToken = "2"
    BorderLineColorToken = "Blanc"
    HasBackground = true
    BackgroundLocalRenderLayer = 1

    Components =
    [
        UnitLabelUnitMoraleAndHPGaugesBUCKComponent
        (
            AlignementToFather = [0.5, 1.0]
            AlignementToAnchor = [0.5, 1.0]
            LocalRenderLayer = 3
        ),
        SmartChipList(LocalRenderLayer = 3),
    ]
)
//----------------------------------------------------------------------
private MultiSelectionUnitLabelUnitIcon is TBUCKSpecificLabelUnitIconDescriptor
(
    ElementName = "UnitIcon"

    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [34.0, 34.0]
        AlignementToFather = [0.0, 0.5]
        AlignementToAnchor = [0.0, 0.5]
    )

    RadarIconTextureName = "icone_PourPanelSelectionRdr"
    RadarIconColorName = "Blanc220"

    ChildFitToContent = true
    LocalRenderLayer = 2

    TextureDrawer = "ColorMultiply"
    UniformDrawer = $/UserInterface/UIUniformDrawer

    HasBorder = false
    BorderThicknessToken = "2"
    BorderLineColorToken = "Blanc"
    HasBackground = true
    BackgroundLocalRenderLayer = 1

    Components =
    [
        UnitLabelUnitMoraleAndHPGaugesBUCKComponent
        (
            AlignementToFather = [0.5, 1.0]
            AlignementToAnchor = [0.5, 1.0]
            LocalRenderLayer = 3
        ),
        SmartChipList(LocalRenderLayer = 3),
    ]
)
//----------------------------------------------------------------------
// Fond de l'étiquette
// les couleurs (background et lignes) sont spécifiées directement dans PlayerUIHelper.ndf
template UnitSurrounding
[
    LocalRenderLayer : int,
    MagnifiableWidthHeight : float2 = [40.0, 40.0],
    FrameMagnifiableWidthHeight : float2 = [40.0, 40.0],
]
is BUCKSensibleAreaDescriptor
(
    ElementName = "BackgroundSensibleArea"

    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = <MagnifiableWidthHeight>
    )

    Components =
    [
        BUCKTextureDescriptor
        (
            ElementName = "Surrounding"
            ComponentFrame = TUIFramePropertyRTTI
            (
                RelativeWidthHeight = [1.0, 1.0]
            )

            BackgroundLocalRenderLayer = <LocalRenderLayer> - 1
            LocalRenderLayer = <LocalRenderLayer>
            HasBorder = false
            BorderThicknessToken = "2"
            BorderLineColorToken = "Blanc"

            TextureFrame   = TUIFramePropertyRTTI
            (
                MagnifiableWidthHeight = <FrameMagnifiableWidthHeight>
                AlignementToFather = [0.5, 0.5]
                AlignementToAnchor = [0.5, 0.5]
            )

            ClipTextureToComponent = false
        )
    ]
)
//----------------------------------------------------------------------
private template SmartChipList
[
    LocalRenderLayer : int,
    AlignementToFather = [0.0, 0.0],
    AlignementToAnchor = [0.0, 0.0],
    SmartGroupOnly = false,
] is SmartChipListDescriptor
(
    AlignementToFather = <AlignementToFather>
    AlignementToAnchor = <AlignementToAnchor>
    LocalRenderLayer = <LocalRenderLayer>
    SmartGroupOnly = <SmartGroupOnly>
)
//----------------------------------------------------------------------
// Icône de couverture
template UnitLabelTerrainIcon
[
    LocalRenderLayer : int,
]
is BUCKTextureDescriptor
(
    ElementName = "TerrainIcon"
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [40.0, 40.0]
        MagnifiableOffset = [0.0, 0.0]
        AlignementToFather = [0.5, 0.5]
        AlignementToAnchor = [0.5, 0.5]
    )

    LocalRenderLayer = <LocalRenderLayer>

    TextureFrame   = TUIFramePropertyRTTI( RelativeWidthHeight = [1.0, 1.0] )
    TextureColorToken = "playerHelper/Otan_line"
)

//----------------------------------------------------------------------
// Icône de rechargement
template UnitLabelUnitReloadIconBUCKComponent
[
    MagnifiableOffset : float2 = [0.0, 0.0],
    LocalRenderLayer : int,
]
is BUCKChronoAnimatedTextureDescriptor
(
    ElementName = "ReloadIcon"
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [22.0, 22.0]
        MagnifiableOffset = <MagnifiableOffset>
        AlignementToFather = [0.5, 0.0]
        AlignementToAnchor = [0.5, 0.0]
    )

    ChronoDrawer = $/UserInterface/ChronoDrawerCommon

    ChronoTexture = "icone_reticule"
    TextureToken = "icone_reticule_vide"

    ChronoBackgroundColor = "Transparent"
    // A configurer via AimingDefaultColor
    ChronoForegroundColor = "Cyan"

    TextureFrame = TUIFramePropertyRTTI(RelativeWidthHeight = [1.0, 1.0])

    LocalRenderLayer = <LocalRenderLayer>
)

//----------------------------------------------------------------------
// Chronographe de sortie de district
private template UnitLabelUnitLeavingDistrictChronoBUCKComponent
[
    MagnifiableOffset : float2,
    AlignementToFather : float2 = [0.0, 0.0],
    AlignementToAnchor : float2 = [0.0, 0.0],
    LocalRenderLayer : int,
]
is BUCKChronoAnimatedTextureDescriptor
(
    ElementName = "LeavingDistrictChrono"
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [15.0, 15.0]
        MagnifiableOffset = <MagnifiableOffset>
        AlignementToFather = <AlignementToFather>
        AlignementToAnchor = <AlignementToAnchor>
    )

    ChronoDrawer = $/UserInterface/ChronoDrawerCommon

    ChronoTexture = "icone_chrono_district"
    TextureToken = "icone_chrono_district"

    ChronoBackgroundColor = "Noir"
    ChronoForegroundColor = "Cyan"
    LocalRenderLayer = <LocalRenderLayer>

    TextureFrame = TUIFramePropertyRTTI(RelativeWidthHeight = [1.0, 1.0])
)

//----------------------------------------------------------------------

private LabelSupplyGaugeWidthHeight is [4.0, 30.0]

//----------------------------------------------------------------------
UnitLabelUnitSupplyExtraGaugeText is BUCKTextDescriptor
(
    ElementName = "ExtraGaugesText"
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = ~/LabelSupplyGaugeWidthHeight
    )

    HorizontalFitStyle = ~/FitStyle/UserDefined
    VerticalFitStyle = ~/FitStyle/UserDefined

    TextDico = ~/LocalisationConstantes/dico_interface_ingame
    TextStyle = "Default"
    TypefaceToken = "UIMainFont"
    TextColor = "Gold"
    TextSize = "12"
    TextToken = "CHAT_PLUS"

    TextPadding = TRTTILength4(Magnifiable = [8.0, 0.0, 0.0, 2.0])

    ParagraphStyle = ~/paragraphStyleTextBottomLeftAlign
    BigLineAction = ~/BigLineAction/ResizeFont
    Rotation = -90
    LocalRenderLayer = 1
)

//----------------------------------------------------------------------

UnitLabelUnitSupplyGaugeBUCKComponent is BUCKSimpleGaugeDescriptor
(
    ElementName = "SupplyGauge"
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = ~/LabelSupplyGaugeWidthHeight
    )

    Axis = ~/ListAxis/Vertical

    HasBackground = true
    BackgroundBlockColorToken = "Black40"
    BackgroundLocalRenderLayer = 1
    LocalRenderLayer = 1 // le C++ ordonne correctement les triangles avec le background pas besoin d'avoir un layer différent

    GaugeMax = 1000
    GraduationStep = 125
    InvertGauge = true // Gauge goes bottom up

    GraduationThicknessToken = "1"
    GraduationColorToken = "UnitLabel/SupplyGaugeBorder"

    FilledContentColorToken = "UnitLabel/SupplyGauge"
    FilledBorderColorToken = "UnitLabel/SupplyGaugeBorder"
    FilledBorderThicknessToken = "1"
)

// -------------------------------------------------------------------------------------------------
// Liste des icones additionnels
private template OverlayIconContainer
[
    MagnifiableIconSize : float = 32.0,
    LocalRenderLayer : int,
] is BUCKContainerDescriptor
(
    ElementName = "OverlayIconList"
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [<MagnifiableIconSize>, <MagnifiableIconSize>]
        AlignementToAnchor = [0.5, 0.0]
        AlignementToFather = [0.5, 0.0]
    )

    Components =
    [
        OverlayIconWithChrono
        (
            ElementName = "LeavingDistrictIcon"
            TextureToken = 'icone_leave'
            TextureColorToken = 'Blanc220'
            MagnifiableWidthHeight = [<MagnifiableIconSize>, <MagnifiableIconSize>]
            LocalRenderLayer = <LocalRenderLayer>
        ),
        OverlayIcon
        (
            ElementName = "StunIcon"
            TextureToken = 'icone_stun'
            TextureColorToken = 'Blanc220'
            MagnifiableWidthHeight = [<MagnifiableIconSize>, <MagnifiableIconSize>]
            LocalRenderLayer = <LocalRenderLayer>
        ),
        OverlayIcon
        (
            ElementName = "PinnedIcon"
            TextureToken = 'icone_pinned'
            MagnifiableWidthHeight = [<MagnifiableIconSize>, <MagnifiableIconSize>]
            LocalRenderLayer = <LocalRenderLayer>
        ),
        OverlayIcon
        (
            ElementName = "RoutIcon"
            TextureToken = 'icone_rout'
            MagnifiableWidthHeight = [<MagnifiableIconSize>, <MagnifiableIconSize>]
            LocalRenderLayer = <LocalRenderLayer>
        )
    ]
)

// -------------------------------------------------------------------------------------------------
// Icone additionel
private template OverlayIcon
[
    ElementName : string,
    TextureToken : string,
    MagnifiableWidthHeight : float2,
    TextureColorToken : string = "Rouge",
    LocalRenderLayer : int,
] is BUCKTextureDescriptor
(
    ElementName = <ElementName>
    TextureToken = <TextureToken>
    LocalRenderLayer = <LocalRenderLayer>
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = <MagnifiableWidthHeight>
        AlignementToFather  = [0.0, 1.0]
        AlignementToAnchor  = [0.0, 1.0]
    )
    TextureFrame = TUIFramePropertyRTTI
    (
        RelativeWidthHeight = [1.0, 1.0]
        AlignementToFather  = [0.0, 1.0]
        AlignementToAnchor  = [0.0, 1.0]
    )
    TextureColorToken = <TextureColorToken>
)

//----------------------------------------------------------------------
private template OverlayIconWithChrono
[
    ElementName : string,
    TextureToken : string,
    MagnifiableWidthHeight : float2,
    TextureColorToken : string = "Rouge",
    LocalRenderLayer : int,
] is BUCKContainerDescriptor
(
    ElementName = <ElementName>
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [32.0, 16.0]
        AlignementToFather  = [0.0, 1.0]
        AlignementToAnchor  = [0.0, 1.0]
    )

    Components =
    [
        OverlayIcon
        (
            ElementName = <ElementName> + "_Texture"
            TextureToken = <TextureToken>
            MagnifiableWidthHeight = <MagnifiableWidthHeight>
            TextureColorToken = <TextureColorToken>
            LocalRenderLayer = <LocalRenderLayer>
        ),
        UnitLabelUnitLeavingDistrictChronoBUCKComponent
        (
            MagnifiableOffset = [0.0, 0.0]
            LocalRenderLayer = <LocalRenderLayer>
        ),
    ]
)

//----------------------------------------------------------------------
// Morale Gauge & Health point gauge
template UnitLabelUnitMoraleAndHPGaugesBUCKComponent
[
    LocalRenderLayer : int,
    MoraleOnly : bool = false,
    AlignementToFather = [0.5, 0.0],
    AlignementToAnchor = [0.5, 0.0],

] is TUISpecificMoraleAndHPGaugesViewDescriptor
(
    ElementName = "MoraleAndHPGauges"

    UniformDrawer = $/UserInterface/UIUniformDrawer
    MoraleGaugeColorTokens = ["pi3", "pi2", "pi1", "score_05"]
    MoraleOnly = <MoraleOnly>
    AlignementToFather = <AlignementToFather>
    AlignementToAnchor = <AlignementToAnchor>

    MoraleMagnifiableWidthHeight = [32.0, 2.0]
    LocalRenderLayer = <LocalRenderLayer>
    HPMagnifiableHeight = 4.0 //La largeur est calculée dans le code à partir de MagnifiableWidthOneHPLabelBlock
    MagnifiableSpacing = 1.0

    BackgroundBlockColorToken = "Noir"

    HPGraduationThicknessToken = "1"
    HPGraduationColorToken = "Noir"
    HPFillColorToken = "White"

    HasBackground = true

    // HP value of each HP square.
    // If it equals 1, a 12 HP unit will display 12 HP squares on its label. It if equals 2, 6 HP squares will be displayed.
    HPElementHealthValue = 2
    MagnifiableWidthOneHPLabelBlock = 5.0
)
//----------------------------------------------------------------------
// Nombre d'unités
private template CurrentUnitLabelUnitCountIconBUCKComponent
[
    LocalRenderLayer : int,
]
is BUCKTextDescriptor
(
    ElementName = 'NbUnits'
    ComponentFrame = TUIFramePropertyRTTI
    (
        AlignementToAnchor = [0.0, 0.0]
        AlignementToFather = [0.0, 0.0]
    )

    ParagraphStyle = TParagraphStyleRTTI
    (
        Alignment = UIText_Center
        VerticalAlignment = UIText_VerticalCenter
        InterLine = 0
    )

    LocalRenderLayer = <LocalRenderLayer>+1

    HorizontalFitStyle = ~/FitStyle/FitToContent
    VerticalFitStyle = ~/FitStyle/FitToContent

    BigLineAction = ~/BigLineAction/ResizeFont
    TextPadding = TRTTILength4(Magnifiable = [1.0, 1.0, 2.0, 1.0])

    HasBackground = true
    BackgroundBlockColorToken = "SD2_Gris80"
    BackgroundLocalRenderLayer = <LocalRenderLayer>

    TextStyle = "LabelUnitNameStroke"
    TypefaceToken = "UISecondFont"
    TextColor = "Blanc"
    TextSize = "14"
)
//----------------------------------------------------------------------
// Nombre d'unités
private template CarriedUnitLabelUnitCountIconBUCKComponent
[
    LocalRenderLayer : int,
]
is BUCKTextDescriptor
(
    ElementName = 'NbCarriedUnits'
    ComponentFrame = TUIFramePropertyRTTI
    (
        AlignementToAnchor = [0.0, 0.0]
        AlignementToFather = [0.0, 0.0]
    )

    ParagraphStyle = TParagraphStyleRTTI
    (
        Alignment = UIText_Center
        VerticalAlignment = UIText_VerticalCenter
        InterLine = 0
        OpticalAlignment = true
    )

    LocalRenderLayer = <LocalRenderLayer>+1

    HorizontalFitStyle = ~/FitStyle/FitToContent
    VerticalFitStyle = ~/FitStyle/FitToContent

    BigLineAction = ~/BigLineAction/ResizeFont
    TextPadding = TRTTILength4(Magnifiable = [1.0, 1.0, 1.0, 1.0])

    HasBackground = true
    BackgroundBlockColorToken = "SD2_Gris80"
    BackgroundLocalRenderLayer = <LocalRenderLayer>

    TextStyle = "LabelUnitNameStroke"
    TypefaceToken = "UISecondFont"
    TextColor = "Blanc"
    TextSize = "10"
)
//----------------------------------------------------------------------
// Icône d'experience
private template UnitLabelUnitExperienceIconsBUCKComponent
[
    LocalRenderLayer : int,
    MagnifiableWidthHeight : float2 = [10.0, 10.0],
]
is BUCKTextureDescriptor
(
    ElementName = "LevelIcon"
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = <MagnifiableWidthHeight>
        AlignementToFather = [1.0, 0.0]
        AlignementToAnchor = [1.0, 0.0]
    )

    TextureFrame   = TUIFramePropertyRTTI
    (
        RelativeWidthHeight = [1.0, 1.0]
    )

    LocalRenderLayer = <LocalRenderLayer>
    ClipTextureToComponent = false
)

//----------------------------------------------------------------------
// Message de critiques
UnitLabelUnitLeavingDistrictBUCKComponent is BUCKContainerDescriptor
(
    ElementName = "LeavingDistrictComponent"
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [100.0, 15.0]
        AlignementToAnchor = [0.5, 0.0]
        AlignementToFather = [0.5, 0.0]
    )

    Components =
    [
        BUCKGradientDescriptor
        (
            ComponentFrame = TUIFramePropertyRTTI
            (
                RelativeWidthHeight = [1.0, 0.0]
                MagnifiableWidthHeight = [0.0, 15.0]
                AlignementToFather = [0.5, 1.0]
                AlignementToAnchor = [0.5, 1.0]
            )

            Transition0 = 0.0
            Transition1 = 0.5
            Transition2 = 0.5
            Transition3 = 1.0

            TransitionColor0 = "Label/Gradient05"
            TransitionColor1 = "Label/Gradient1"
            IsRelative = true
            IsVertical = false

            LocalRenderLayer = 1
        ),

        BUCKTextDescriptor
        (
            ElementName = 'LeavingDistrictComponentText'
            ComponentFrame = TUIFramePropertyRTTI
            (
                RelativeWidthHeight = [1.0, 0.0]
                MagnifiableWidthHeight = [0.0, 15.0]
                AlignementToFather = [0.5, 1.0]
                AlignementToAnchor = [0.5, 1.0]
            )

            ParagraphStyle = TParagraphStyleRTTI
            (
                Alignment = UIText_Center
                VerticalAlignment = UIText_VerticalCenter
                InterLine = 0
            )

            TextStyle = "Default"

            HorizontalFitStyle = ~/FitStyle/UserDefined

            TypefaceToken = "IBM"
            BigLineAction = ~/BigLineAction/CutByDots

            TextDico = ~/LocalisationConstantes/dico_interface_ingame

            TextColor = "Cyan"
            TextSize = "UnitLabel/TextElement"

            TextToken = "DIST_LEAVE"

            LocalRenderLayer = 2
        ),

        UnitLabelUnitLeavingDistrictChronoBUCKComponent
        (
            MagnifiableOffset = [22.0, 0.0]
            AlignementToFather = [1.0, 1.0]
            AlignementToAnchor = [1.0, 1.0]
            LocalRenderLayer = 3
        ),
    ]
)

//----------------------------------------------------------------------
// Message de critiques
UnitLabelUnitCriticalMessageBUCKComponent is BUCKContainerDescriptor
(
    ElementName = "CriticTitle"
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [120.0, 15.0]
        AlignementToAnchor = [0.5, 0.0]
        AlignementToFather = [0.5, 0.0]
    )

    Components =
    [
        BUCKGradientDescriptor
        (
            ComponentFrame = TUIFramePropertyRTTI
            (
                RelativeWidthHeight = [1.0, 0.0]
                MagnifiableWidthHeight = [0.0, 15.0]
                AlignementToFather = [0.5, 1.0]
                AlignementToAnchor = [0.5, 1.0]
            )

            Transition0 = 0.0
            Transition1 = 0.5
            Transition2 = 0.5
            Transition3 = 1.0

            TransitionColor0 = "Label/Gradient0"
            TransitionColor1 = "Label/Gradient1"
            IsRelative = true
            IsVertical = false

            LocalRenderLayer = 1
        ),

        BUCKTextDescriptor
        (
            ElementName = 'CriticTitleText'
            ComponentFrame = TUIFramePropertyRTTI
            (
                RelativeWidthHeight = [1.0, 0.0]
                MagnifiableWidthHeight = [0.0, 15.0]
                AlignementToFather = [0.5, 1.0]
                AlignementToAnchor = [0.5, 1.0]
            )

            ParagraphStyle = TParagraphStyleRTTI
            (
                Alignment = UIText_Center
                VerticalAlignment = UIText_VerticalCenter
                InterLine = 0
            )

            TextStyle = "Default"

            HorizontalFitStyle = ~/FitStyle/UserDefined

            TypefaceToken = "IBM"
            BigLineAction = ~/BigLineAction/CutByDots

            TextDico = ~/LocalisationConstantes/dico_interface_ingame

            TextColor = "UnitLabel/CriticTitle"
            TextSize = "UnitLabel/TextElement"

            LocalRenderLayer = 2
        )
    ]
)

//----------------------------------------------------------------------

private StandardLabelList is BUCKListDescriptor
(
    Axis = ~/ListAxis/Vertical
    BreadthComputationMode = ~/BreadthComputationMode/ComputeBreadthFromLargestChild

    Elements =
    [
        BUCKListElementDescriptor
        (
            ComponentDescriptor = ~/UpperLabel
        ),
        BUCKListElementDescriptor
        (
            ComponentDescriptor = BUCKContainerDescriptor
            (
                ComponentFrame = TUIFramePropertyRTTI
                (
                    MagnifiableWidthHeight = [40.0, 40.0]
                    AlignementToAnchor = [0.5, 0.0]
                    AlignementToFather = [0.5, 0.0]
                )

                IsClippable = false

                Components =
                [
                    // Icône de couverture
                    UnitLabelTerrainIcon
                    (
                        LocalRenderLayer = 4
                    ),
                    UnitSurrounding
                    (
                        LocalRenderLayer = 2
                    ),
                ]
            )
        ),

        BUCKListElementDescriptor(ComponentDescriptor = ~/UnitLabelUnitLeavingDistrictBUCKComponent),
        BUCKListElementDescriptor(ComponentDescriptor = ~/UnitLabelUnitCriticalMessageBUCKComponent),
    ]
)

//----------------------------------------------------------------------

private MultiSelectionLabelList is BUCKContainerDescriptor
(
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [100.0, 62.0]
    )

    IsClippable = true

    Components =
    [
        BUCKSensibleAreaDescriptor
        (
            ElementName = "BackgroundSensibleArea"

            ComponentFrame = TUIFramePropertyRTTI
            (
                RelativeWidthHeight = [1.0, 1.0]
            )

            Components =
            [
                PanelRoundedCorner
                (
                    ComponentFrame = TUIFramePropertyRTTI
                    (
                        RelativeWidthHeight = [1.0, 1.0]
                    )

                    BackgroundLocalRenderLayer = 1
                    BorderLocalRenderLayer = 1
                    Radius = 3
                    BackgroundBlockColorToken = 'BoutonTemps'
                    BorderLineColorToken = 'BoutonTemps'
                ),
            ]
        ),
        ~/UpperLabelMultiSelection,
    ]
)

//----------------------------------------------------------------------
// Composant principal
private UnitLabelUnitBUCKComponentDescriptor is BUCKLocalLayerContainerDescriptor
(
    ElementName = "LocalLayerContainer"
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableOffset  = [0.0, 20.0]
        AlignementToFather = [0.5, 1.0]
        AlignementToAnchor = [0.5, 1.0]
    )

    FitStyle = ~/ContainerFitStyle/FitToContent
    NbLayersToLock = 6

    Components = [ ~/StandardLabelList ]
)

private UnitLabelUnitBUCKComponentDescriptorForMultiSelection is BUCKLocalLayerContainerDescriptor
(
    ElementName = "LocalLayerContainer"
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableOffset  = [0.0, 0.0]
        AlignementToFather = [0.5, 1.0]
        AlignementToAnchor = [0.5, 1.0]
    )

    FitStyle = ~/ContainerFitStyle/FitToContent
    NbLayersToLock = 6

    Components = [ ~/MultiSelectionLabelList ]
)
//-------------------------------------------------------------------------------------
private CurrentUnitIconAndRightLabel is BUCKSensibleAreaDescriptor
(
    ElementName = "UnitIconSensibleArea"

    ComponentFrame = TUIFramePropertyRTTI
    (
        AlignementToAnchor = [0.5, 0.0]
        AlignementToFather = [0.5, 0.0]
    )

    FitStyle = ~/ContainerFitStyle/FitToContent
    MaskEvents = false

    Components =
    [
        ~/UnitLabelUnitIcon,
        BUCKListDescriptor
        (
            ComponentFrame = TUIFramePropertyRTTI
            (
                AlignementToFather = [1.0, 0.0]
                RelativeWidthHeight = [0.0, 1.0]
            )

            Axis = ~/ListAxis/Horizontal
            FirstMargin = TRTTILength(Magnifiable = 2.0)
            InterItemMargin = TRTTILength(Magnifiable = 2.0)
            BreadthComputationMode = ~/BreadthComputationMode/ComputeBreadthFromFrameProperty

            Elements =
            [
                BUCKListElementDescriptor
                (
                    ComponentDescriptor = ~/UnitLabelUnitSupplyGaugeBUCKComponent
                ),
                BUCKListElementDescriptor
                (
                    ComponentDescriptor = ~/UnitLabelUnitSupplyExtraGaugeText
                ),
                BUCKListElementDescriptor
                (
                    ComponentDescriptor = LabelFeedbackIcons()
                ),
            ]
        ),
    ]
)
//-------------------------------------------------------------------------------------
private MultiSelectionUnitIconAndRightLabel is BUCKSensibleAreaDescriptor
(
    ElementName = "UnitIconSensibleArea"

    ComponentFrame = TUIFramePropertyRTTI
    (
        AlignementToAnchor = [0.5, 0.0]
        AlignementToFather = [0.5, 0.0]
    )

    FitStyle = ~/ContainerFitStyle/FitToContent
    MaskEvents = true

    Components =
    [
        ~/MultiSelectionUnitLabelUnitIcon
    ]
)
//-------------------------------------------------------------------------------------

private template LabelFeedbackIcon
[
    FeedbackTexture : string,
    FeedbackRefillTexture : string,
] is TLabelFeedbackIconDescriptor
(
    FeedbackTexture = <FeedbackTexture>
    FeedbackRefillTexture = <FeedbackRefillTexture>
)

//-------------------------------------------------------------------------------------

template LabelFeedbackIcons
[
    ComponentFrame : TUIFramePropertyRTTI = TUIFramePropertyRTTI(),
] is TBUCKSpecificLabelFeedbackIconsDescriptor
(
    ElementName = "FeedbackIcons"
    ComponentFrame = <ComponentFrame>

    IsClippable = true

    AnimDuration = 1.0
    AnimMinAlpha = 50

    TextureMagnifiableSize = [24.0, 24.0]

    LocalRenderLayer = 1
    TextureDrawer = "ColorMultiply"

    Icons = MAP
    [
        (~/InGameUnitLabelUpdateFeedbackType/Fuel, LabelFeedbackIcon
            (
                FeedbackTexture = "icone_fuel"
                FeedbackRefillTexture = "icone_fuel_refill"
            )
        ),
        (~/InGameUnitLabelUpdateFeedbackType/Life, LabelFeedbackIcon
            (
                FeedbackTexture = "icone_life"
                FeedbackRefillTexture = "icone_life_refill"
            )
        ),
        (~/InGameUnitLabelUpdateFeedbackType/Bullets, LabelFeedbackIcon
            (
                FeedbackTexture = "icone_bullets"
                FeedbackRefillTexture = "icone_bullets_refill"
            )
        ),
        (~/InGameUnitLabelUpdateFeedbackType/Missile, LabelFeedbackIcon
            (
                FeedbackTexture = "icone_missile"
                FeedbackRefillTexture = "icone_missile_refill"
            )
        ),
        (~/InGameUnitLabelUpdateFeedbackType/Shell, LabelFeedbackIcon
            (
                FeedbackTexture = "icone_shell"
                FeedbackRefillTexture = "icone_shell_refill"
            )
        ),
    ]
)
//-------------------------------------------------------------------------------------
// nom & nb unités d'infanterie
private template CurrentUnitNameList
[
    LocalRenderLayer : int,
] is BUCKListDescriptor
(
    ElementName = "UnitNameList"
    ComponentFrame = TUIFramePropertyRTTI
    (
        AlignementToAnchor = [0.5, 0.0]
        AlignementToFather = [0.5, 0.0]
    )

    Axis = ~/ListAxis/Horizontal

    BreadthComputationMode = ~/BreadthComputationMode/ComputeBreadthFromLargestChild

    InterItemMargin = TRTTILength(Magnifiable = 0.0)

    Elements =
    [
        BUCKListElementDescriptor
        (
            ComponentDescriptor = CurrentUnitLabelUnitCountIconBUCKComponent( LocalRenderLayer = <LocalRenderLayer> )
        ),
        BUCKListElementDescriptor
        (
            ComponentDescriptor = SoloUnitLabelUnitNameBUCKComponent
            (
                LocalRenderLayer = <LocalRenderLayer>
            )
        ),
    ]
)
//-------------------------------------------------------------------------------------
// nom & nb unités d'infanterie
private template SoloCarriedUnitNameList
[
    LocalRenderLayer : int,
] is BUCKListDescriptor
(
    ElementName = "CarriedUnitNameList"
    ComponentFrame = TUIFramePropertyRTTI
    (
        AlignementToAnchor = [0.5, 0.0]
        AlignementToFather = [0.5, 0.0]
    )

    Axis = ~/ListAxis/Horizontal

    BreadthComputationMode = ~/BreadthComputationMode/ComputeBreadthFromLargestChild

    InterItemMargin = TRTTILength(Magnifiable = 0.0)

    Elements =
    [
        BUCKListElementDescriptor
        (
            ComponentDescriptor = CarriedUnitLabelUnitCountIconBUCKComponent( LocalRenderLayer = <LocalRenderLayer> )
        ),
        BUCKListElementDescriptor
        (
            ComponentDescriptor = CarriedUnitLabelUnitNameBUCKComponent
            (
                LocalRenderLayer = <LocalRenderLayer>
            )
        ),
    ]
)
//-------------------------------------------------------------------------------------
// nom & nb unités d'infanterie
private template MultiSelectionCarriedUnitNameList
[
    LocalRenderLayer : int,
] is BUCKListDescriptor
(
    ElementName = "CarriedUnitNameList"
    ComponentFrame = TUIFramePropertyRTTI
    (
        AlignementToAnchor = [0.5, 0.0]
        AlignementToFather = [0.5, 0.0]
    )

    Axis = ~/ListAxis/Horizontal

    BreadthComputationMode = ~/BreadthComputationMode/ComputeBreadthFromLargestChild

    InterItemMargin = TRTTILength(Magnifiable = 0.0)

    Elements =
    [
        BUCKListElementDescriptor
        (
            ComponentDescriptor = CarriedUnitLabelUnitCountIconBUCKComponent( LocalRenderLayer = <LocalRenderLayer> )
        ),
        BUCKListElementDescriptor
        (
            ComponentDescriptor = MultiSelectionCarriedUnitLabelUnitNameBUCKComponent
            (
                LocalRenderLayer = <LocalRenderLayer>
            )
        ),
    ]
)
//-------------------------------------------------------------------------------------
// nom & nb unités d'infanterie
template CurrentUnitNameListSensibleArea
[
    LocalRenderLayer : int,
]
is BUCKSensibleAreaDescriptor
(
    ElementName = "UnitNameListSensibleArea"

    ComponentFrame = TUIFramePropertyRTTI
    (
        AlignementToAnchor = [0.5, 0.0]
        AlignementToFather = [0.5, 0.0]
    )

    FitStyle = ~/ContainerFitStyle/FitToContent
    IsClippable = false

    Components =
    [
        CurrentUnitNameList
        (
            LocalRenderLayer = <LocalRenderLayer>
        )
    ]
)
//-------------------------------------------------------------------------------------
// nom & nb unités d'infanterie
template CarriedUnitNameListSensibleArea
[
    LocalRenderLayer : int,
]
is BUCKSensibleAreaDescriptor
(
    ElementName = "CarriedUnitNameListSensibleArea"

    ComponentFrame = TUIFramePropertyRTTI
    (
        AlignementToAnchor = [0.5, 0.0]
        AlignementToFather = [0.5, 0.0]
    )

    FitStyle = ~/ContainerFitStyle/FitToContent
    IsClippable = false

    Components =
    [
        SoloCarriedUnitNameList( LocalRenderLayer = <LocalRenderLayer> )
    ]
)

//-------------------------------------------------------------------------------------
private template CurrentUnitLabelUpperList
[
    ComponentFrame : TUIFramePropertyRTTI = TUIFramePropertyRTTI
    (
        AlignementToFather = [0.5, 0.0]
        AlignementToAnchor = [0.5, 0.0]
    ),
    ChildFitToContent : bool = false,
] is TBUCKSpecificLabelUpperListDescriptor
(
    ElementName = "LabelUpperList"

    ComponentFrame = <ComponentFrame>

    IsClippable = false

    ChildFitToContent = <ChildFitToContent>

    BackgroundLocalRenderLayer = 1
    LocalRenderLayer = 2
    UniformDrawer = $/UserInterface/UIUniformDrawer
    TextureDrawer = "ColorMultiply"
    TextFormatScript = ~/DefaultTextFormatScript

    // Evacuation Icon
    EvacuationIconTextureName = "icone_evacuation"
    EvacuationIconMagnifiableSize = 23.0

    // Reload Icon
    ReloadIconMagnifiableSize = 22.0
    ReloadIconDrawer = $/UserInterface/ChronoDrawerCommon
    ReloadIconChronoTexture = "icone_reticule"
    ReloadIconTextureToken = "icone_reticule_vide"
    ReloadIconChronoBackgroundColor = "Transparent"
    // A configurer via AimingDefaultColor
    ReloadIconChronoForegroundColor = "Cyan"

    // All Texts
    ParagraphStyle = TParagraphStyleRTTI
    (
        Alignment = UIText_Center
        VerticalAlignment = UIText_VerticalCenter
        InterLine = 0
        OpticalAlignment = true
    )

    TypefaceToken = "UISecondFont"

    // Unit Name
    UnitNameTextStyle = "Default"

    // Unit Number
    NbUnitsBackgroundColor = "SD2_Gris80"
    NbUnitsTextStyle = "LabelUnitNameStroke"
    NbUnitsTextColor = "Blanc"

    // Player Name
    PlayerNameTextStyle = "PlayerName"
    PlayerNameTextColor = "Fulda_Turquoise"
    PlayerNameTypefaceToken = "UIMainFont"

    UnitInfoTextSize = "14"
    PlayerNameTextSize = "20"

    UnitInfoVPadding = TRTTILength2(Magnifiable = [1.0, 1.0])
    UnitNameHPadding = TRTTILength2(Magnifiable = [3.0, 3.0])
    UnitNumberHPadding = TRTTILength2(Magnifiable = [1.0, 1.0])
    PlayerNamePadding = TRTTILength4(Magnifiable = [1.0, 1.0, 1.0, 1.0])

    Components =
    (
        [
            // Size will be calculated in cpp
            BUCKSensibleAreaDescriptor
            (
                ElementName = "UnitNameListSensibleArea"

                ComponentFrame = TUIFramePropertyRTTI
                (
                    AlignementToFather = [0.5, 1.0]
                    AlignementToAnchor = [0.5, 1.0]
                )
                IsClippable = false
            )
        ]
    )
)

//-------------------------------------------------------------------------------------
MultiSelectionUnitLabelUpperList is TBUCKSpecificLabelUpperListDescriptor
(
    ElementName = "LabelUpperList"

    ComponentFrame = TUIFramePropertyRTTI
    (
        AlignementToFather = [0.5, 0.0]
        AlignementToAnchor = [0.5, 0.0]
    )

    IsClippable = true

    ChildFitToContent = false

    BackgroundLocalRenderLayer = 2
    LocalRenderLayer = 3
    UniformDrawer = $/UserInterface/UIUniformDrawer
    TextureDrawer = "ColorMultiply"
    TextFormatScript = ~/DefaultTextFormatScript

    // Evacuation Icon
    EvacuationIconTextureName = "icone_evacuation"
    EvacuationIconMagnifiableSize = 23.0

    // Reload Icon
    ReloadIconMagnifiableSize = 22.0
    ReloadIconDrawer = $/UserInterface/ChronoDrawerCommon
    ReloadIconChronoTexture = "icone_reticule"
    ReloadIconTextureToken = "icone_reticule_vide"
    ReloadIconChronoBackgroundColor = "Transparent"
    // A configurer via AimingDefaultColor
    ReloadIconChronoForegroundColor = "Cyan"

    // All Texts
    ParagraphStyle = TParagraphStyleRTTI
    (
        Alignment = UIText_Center
        VerticalAlignment = UIText_VerticalCenter
        InterLine = 0
        OpticalAlignment = true
    )

    TypefaceToken = "UISecondFont"

    // Unit Name
    UnitNameTextStyle = "Default"

    // Unit Number
    NbUnitsBackgroundColor = "SD2_Gris80"
    NbUnitsTextStyle = "LabelUnitNameStroke"
    NbUnitsTextColor = "Blanc"

    // Player Name
    PlayerNameTextStyle = "PlayerName"
    PlayerNameTextColor = "Fulda_Turquoise"
    PlayerNameTypefaceToken = "UIMainFont"

    UnitInfoTextSize = "14"
    PlayerNameTextSize = "20"

    UnitInfoVPadding = TRTTILength2(Magnifiable = [0.0, 0.0])
    UnitNameHPadding = TRTTILength2(Magnifiable = [1.0, 1.0])
    UnitNumberHPadding = TRTTILength2(Magnifiable = [1.0, 1.0])
    PlayerNamePadding = TRTTILength4(Magnifiable = [1.0, 1.0, 1.0, 1.0])
)
//-------------------------------------------------------------------------------------
private UpperLabel is BUCKListDescriptor
(
    ElementName = "UpperLabel"
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [150.0, 0.0]
        AlignementToFather = [0.5, 0.0]
        AlignementToAnchor = [0.5, 0.0]
    )

    Axis = ~/ListAxis/Vertical
    ClipContent = false

    // Penser a modifier la taille en Pixel du LabelUnitBUCKComponent si on aggrandit ce composant !
    Elements =
    [
        BUCKListElementDescriptor
        (
            ComponentDescriptor = ~/CurrentUnitIconAndRightLabel
        ),
        BUCKListElementDescriptor
        (
            ComponentDescriptor = CarriedUnitNameListSensibleArea( LocalRenderLayer = 1 )
        ),
    ]

    ForegroundComponents =
    [
        CurrentUnitLabelUpperList
        (
            ComponentFrame = TUIFramePropertyRTTI
            (
                AlignementToFather = [0.5, 0.0]
                AlignementToAnchor = [0.5, 1.0]
            )
        ),
    ]
)

//-------------------------------------------------------------------------------------
private UpperLabelMultiSelection is BUCKListDescriptor
(
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [100.0, 0.0]
        AlignementToFather = [0.5, 0.0]
        AlignementToAnchor = [0.5, 0.0]
    )

    Axis = ~/ListAxis/Vertical
    ClipContent = true

    // Penser a modifier la taille en Pixel du LabelUnitBUCKComponent si on aggrandit ce composant !
    Elements =
    [
        BUCKListElementDescriptor
        (
            ComponentDescriptor = ~/MultiSelectionUnitLabelUpperList
        ),
        BUCKListElementDescriptor
        (
            ComponentDescriptor = ~/MultiSelectionUnitIconAndRightLabel
        ),
        BUCKListElementSpacer(Magnifiable = 1.0),
        BUCKListElementDescriptor
        (
            ComponentDescriptor = MultiSelectionCarriedUnitNameList( LocalRenderLayer = 2 )
        ),
    ]
)

//-------------------------------------------------------------------------------------
// L'etiquette sur l'unité
private template UISpecificInGameUnitLabelViewDescriptor
[
    MainComponentDescriptor : TBUCKContainerDescriptor,
    DebugViewName : string,
]
is TUISpecificInGameUnitLabelViewForUnitLabelDescriptor
(
    MainComponentDescriptor = <MainComponentDescriptor>

    ExperienceTexturesResources     = ~/ExperienceTexturesResources

    DebugViewName = <DebugViewName>

    // Animation Stealthed
    // Temps de durée d'un blink
    AnimStealthedBlinkDuration = 2.0
    // Animation Panicked
    // Temps de durée d'un blink
    AnimPanickedBlinkDuration = 1.5
    // Animation Shaken
    // Temps de pause entre les séries de blink (0 => pas de pause)
    AnimShakenPauseTime = 3.0
    // Temps de durée d'un blink
    AnimShakenBlinkDuration = 1.5
    // Nombre de blinks par série (-1 => infini)
    AnimShakenNbBlinks = 3
    // Alpha Minimum atteint pour les animation de "suppress"
    SuppressAnimAlphaMinimum = 20
    // Alpha Minimum atteint pour l'animation "cachée"
    StealthedAnimAlphaMinimum = 20

    NbMaxCharInExtraSupplyGauge = 5
    TokenFormatExtraSupplyGaugeWhenOverflow = "FMTSUPOVF"

    // Textures
    AceBackgroundTexture    = "CommonTexture_Etiquette_Background_Ace"
    NormalBackgroundTexture = "CommonTexture_Label_Background"
    CarriedUnitIconUnknown  = "UseInGame_Transport_UNKNOW"
)
//-------------------------------------------------------------------------------------
// L'etiquette aggregée
private template UISpecificInGameUnitLabelViewForAggregationDescriptor
[
    MainComponentDescriptor : TBUCKContainerDescriptor,
    DebugViewName : string,
]
is TUISpecificInGameUnitLabelViewForAggregationDescriptor
(
    MainComponentDescriptor = <MainComponentDescriptor>

    ExperienceTexturesResources     = ~/ExperienceTexturesResources

    DebugViewName = <DebugViewName>

    // Animation Stealthed
    // Temps de durée d'un blink
    AnimStealthedBlinkDuration = 2.0
    // Animation Panicked
    // Temps de durée d'un blink
    AnimPanickedBlinkDuration = 1.5
    // Animation Shaken
    // Temps de pause entre les séries de blink (0 => pas de pause)
    AnimShakenPauseTime = 3.0
    // Temps de durée d'un blink
    AnimShakenBlinkDuration = 1.5
    // Nombre de blinks par série (-1 => infini)
    AnimShakenNbBlinks = 3
    // Alpha Minimum atteint pour les animation de "suppress"
    SuppressAnimAlphaMinimum = 20
    // Alpha Minimum atteint pour l'animation "cachée"
    StealthedAnimAlphaMinimum = 20

    NbMaxCharInExtraSupplyGauge = 5
    TokenFormatExtraSupplyGaugeWhenOverflow = "FMTSUPOVF"

    // Textures
    AceBackgroundTexture    = "CommonTexture_Etiquette_Background_Ace"
    NormalBackgroundTexture = "CommonTexture_Label_Background"
    CarriedUnitIconUnknown  = "UseInGame_Transport_UNKNOW"
)
//-------------------------------------------------------------------------------------
// L'etiquette dans le panel en bas
private template UISpecificInGameUnitLabelViewForMultiSelectionDescriptor
[
    MainComponentDescriptor : TBUCKContainerDescriptor,
    DebugViewName : string,
]
is TUISpecificInGameUnitLabelViewForMultiSelectionDescriptor
(
    MainComponentDescriptor = <MainComponentDescriptor>

    ExperienceTexturesResources     = ~/ExperienceTexturesResources

    DebugViewName = <DebugViewName>

    // Animation Stealthed
    // Temps de durée d'un blink
    AnimStealthedBlinkDuration = 2.0
    // Animation Panicked
    // Temps de durée d'un blink
    AnimPanickedBlinkDuration = 1.5
    // Animation Shaken
    // Temps de pause entre les séries de blink (0 => pas de pause)
    AnimShakenPauseTime = 3.0
    // Temps de durée d'un blink
    AnimShakenBlinkDuration = 1.5
    // Nombre de blinks par série (-1 => infini)
    AnimShakenNbBlinks = 3
    // Alpha Minimum atteint pour les animation de "suppress"
    SuppressAnimAlphaMinimum = 20
    // Alpha Minimum atteint pour l'animation "cachée"
    StealthedAnimAlphaMinimum = 20

    NbMaxCharInExtraSupplyGauge = 5
    TokenFormatExtraSupplyGaugeWhenOverflow = "FMTSUPOVF"

    // Textures
    AceBackgroundTexture    = "CommonTexture_Etiquette_Background_Ace"
    NormalBackgroundTexture = "CommonTexture_Label_Background"
    CarriedUnitIconUnknown  = "UseInGame_Transport_UNKNOW"
)
//-------------------------------------------------------------------------------------
UISpecificUnitLabelViewDescriptor is UISpecificInGameUnitLabelViewDescriptor
(
    MainComponentDescriptor = UnitLabelUnitBUCKComponentDescriptor
    DebugViewName = "InGameUnitLabelDebug"
)
//-------------------------------------------------------------------------------------
UISpecificUnitLabelViewForMultiSelectionDescriptor is UISpecificInGameUnitLabelViewForMultiSelectionDescriptor
(
    MainComponentDescriptor = UnitLabelUnitBUCKComponentDescriptorForMultiSelection
    DebugViewName = ""
)
